### Get all employees

GET http://localhost:8080/employees
Accept: application/json

> {%
    client.test("Response code is 200 OK", () => client.assert(response.status === 200));
    client.test("Employees are returned", () => client.assert(jsonPath(response.body, "$.employees").length > 0));
    client.global.set("firstEmployeeId", jsonPath(response.body, "$.employees[0].id"));
%}

### Get employee by id

GET http://localhost:8080/employees/{{firstEmployeeId}}
Accept: application/json

> {%
    client.test(`Response code is 200 OK`,()=>client.assert(response.status===200))
    client.test(`Employee is returned`,()=>client.assert(
        jsonPath(response.body,"$.id")==client.global.get("firstEmployeeId")
    ))
    client.global.set("firstEmployeeCompanyId",jsonPath(response.body,"$.company.id"))
%}

### Get employees by company id

GET http://localhost:8080/companies/{{firstEmployeeCompanyId}}/employees
Accept: application/json

> {%
    client.test(`Response code is 200 OK`,()=>client.assert(response.status===200))
    client.test(`Employees are returned`,()=>client.assert(
        jsonPath(response.body,"$.employees").length>0
    ))
%}

### Add employee

PUT http://localhost:8080/companies/{{firstEmployeeCompanyId}}/employees
Content-Type: application/json

{
  "name": "testEmployee",
  "level": 100
}

> {%
    client.test(`Response code is 201 CREATED`,()=>client.assert(response.status===201))
    client.global.set("addedEmployeeId",jsonPath(response.body,"$.id"))
%}

### Update employee

PATCH http://localhost:8080/employees/{{addedEmployeeId}}
Content-Type: application/json

{
  "name": "updatedTestEmployee",
  "level": 200
}

> {%
    client.test(`Response code is 202 Accepted`,()=>client.assert(response.status===202))
    client.test(`Employee is updated`,()=>client.assert(
        jsonPath(response.body,"$.name")=="updatedTestEmployee"&&
        jsonPath(response.body,"$.level")==200
    ))
%}

### Delete employee

DELETE http://localhost:8080/employees/{{addedEmployeeId}}
Accept: application/json

> {%
    client.test(`Response code is 204 No Content`,()=>client.assert(response.status===204))
%}

